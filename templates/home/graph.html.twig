{% extends "base.html.twig" %}

{% block stylesheets %}
<style>
#table{
    margin-top: 1rem;
}
#table *{
  color: #fff !important;
}

</style>

{% endblock %}

{% block javascripts %}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script defer >
 let lower_months = ["{{ months |keys  | join('", "')| raw   }}"]
 let tmp = [];
 
 lower_months.forEach(word => {
      tmp.push(word.charAt(0).toUpperCase()
  + word.slice(1));
 });
  const months = tmp;


const categories = ["{{ sumByCatByMonth | keys | join('", "')| raw   }}"];


const data = {
    labels : months,
    datasets : [
        {% for cat , array in sumByCatByMonth %}
            {% set r = random(0,255) %}
            {% set g = random(0,255) %}
            {% set b = random(0,255) %}

        {
            label: '{{ cat }}',
            data :  [{{ array | join(',')| raw   }}],
            borderColor: 'rgb({{r}}, {{g}}, {{b}})',
            backgroundColor: 'rgb({{r}}, {{g}}, {{b}})',
            yAxisID: 'y',
        },
        {% endfor %}
        
      
    ]

}

    // Configuration du graphique
    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        interaction: {
          mode: 'index',
          intersect: false,
        },
        stacked: false,
        plugins: {
          title: {
            display: true,
            text: 'Chart.js Line Chart - Multi Axis'
          }
        },
        scales: {
          y: {
            type: 'linear',
            display: true,
            position: 'left',
          },
          y1: {
            type: 'linear',
            display: true,
            position: 'right',

            // grid line settings
            grid: {
              drawOnChartArea: false, // only want the grid lines for one axis to show up
            },
          },
        },
        
      }
    };

$(document).ready(function() {
    const ctx = document.getElementById('myChart').getContext('2d');
    let myChart = new Chart(ctx, {
    type: 'line',
    data: data,
    options: config
    });

    ctx.canvas.onclick = (evt) => {
        const activePoints = myChart.getElementsAtEventForMode(evt, 'point', config);
        if (activePoints.length == 0)
            return;
        const firstPoint = activePoints[0];
        const label = myChart.data.labels[firstPoint.index];
 
        

        $.ajax({
            url: "{{path('resume.see.categorie', {'year': year})}}",
            type: "GET",
            data: {
              month : label,
              categorie : categories[firstPoint.datasetIndex],



            },
            success: function(data){
                $('#table').html(data);
                $('#table_title').html(label);
            }
        });
    };

    $('#select_year').change(function(){
				var year = $(this).val();
				window.location.href = "{{path('graphs')}}?year="+year;
			});
});



</script>



{% endblock %}

{% block title %}
	Graphs - Tech&Dev
{% endblock %}

{% block body %}
    <div class="container">
    <pre>
      {{ dump(sumByCatByMonth) }}
    </pre>

    <div class="d-flex align-items-center">
				<h1>Graphs</h1>
				<div>
					<select class="form-select mx-3" id="select_year">
					{% for item in years %}
					{% set item = item | first %}
								<option value="{{item}}" 
							{% if item == year %}selected="selected"{% endif %}
								>{{item}}</option>

					{% endfor %}
					</select>
				</div>
    </div>

    <div id="chart">
        <canvas id="myChart" width="400" height="200"></canvas>
</div>

<hr>

  <h3 id="table_title"></h3>

<div id="table">


</div>
</div>


{% endblock %}